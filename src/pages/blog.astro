---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';

// Get current language from URL
const currentPath = Astro.url.pathname;
const currentLanguage = currentPath.startsWith('/id') ? 'id' : 'en';

// Get search params
const searchParams = Astro.url.searchParams;
const searchQuery = searchParams.get('search')?.toLowerCase() || '';
const selectedTag = searchParams.get('tag');


// Get all posts and filter them
const allPosts = await getCollection('blog');
const posts = allPosts
  .filter(post => post.data.language === currentLanguage)
  .filter(post => {
    if (searchQuery && !post.data.title.toLowerCase().includes(searchQuery)) return false;
    if (selectedTag && !post.data.tags.includes(selectedTag)) return false;
    return true;
  })
  .sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf());
// Get all unique tags
const allTags = [...new Set(
  allPosts
    .filter(post => post.data.language === currentLanguage)
    .flatMap(post => post.data.tags || [])
)].sort();
---

<Layout 
	title="Blog | My Portfolio"
	description="Read my latest blog posts about web development, programming, and technology"
>
	<div class="max-w-6xl mx-auto flex gap-8">
		<div class="flex-1">
		<div class="flex justify-between items-center mb-8">
			<h1 class="text-3xl font-bold text-gray-800 dark:text-white">Latest Blog Posts</h1>
			<form class="relative">
				<input 
					type="text"
					name="search"
					placeholder="Search posts..."
					value={searchQuery}
					class="px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500"
				/>
			</form>
		</div>
		<div class="grid gap-8">
			{posts.length === 0 ? (
				<p class="text-gray-600 dark:text-gray-400 text-center py-8">No posts found.</p>
			) : posts.map(post => (
				<article class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md">
					<h2 class="text-2xl font-bold text-gray-800 dark:text-white mb-2">
						<a href={`/blog/${post.slug}`} class="hover:text-blue-600 dark:hover:text-blue-400">
							{post.data.title}
						</a>
					</h2>
					<div class="text-gray-600 dark:text-gray-300 mb-4">
						<time datetime={post.data.publishDate.toISOString()}>
							{post.data.publishDate.toLocaleDateString()}
						</time>
						 â€¢ {post.data.author}
					</div>
					<p class="text-gray-700 dark:text-gray-300 mb-4">{post.data.description}</p>
					<div class="flex gap-2">
						{post.data.tags.map(tag => (
							<span class="bg-gray-100 text-gray-700 px-2 py-1 rounded-full text-sm">
								{tag}
							</span>
						))}
					</div>
				</article>
			))}
		</div>
		<aside class="w-64 hidden lg:block">
			<div class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md sticky top-4">
				<h2 class="text-xl font-bold text-gray-800 dark:text-white mb-4">Tags</h2>
				<div class="flex flex-col gap-2">
					{allTags.map(tag => (
						<a
							href={`/blog?tag=${tag}`}
							class:list={[
								"px-3 py-1 rounded-full text-sm transition-colors",
								selectedTag === tag
									? "bg-blue-500 text-white"
									: "bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-200 hover:bg-blue-200 dark:hover:bg-blue-800"
							]}
						>
							#{tag} 
							<span class="text-xs">
								({allPosts.filter(post => post.data.language === currentLanguage && post.data.tags.includes(tag)).length})
							</span>
						</a>
					))}
				</div>
			</div>
		</aside>
	</div>
</Layout>
